import numpy as np
import matplotlib.pyplot as plt


def month_profit_trace(profit, reach, make_figs=True):
    if (profit.shape == (4,)) and (reach.shape == (4,)):

        # Weekly Efficiency Vectors
        e_week1 = np.array((reach[0], profit[0]))
        e_week2 = np.array((reach[1], profit[1]))
        e_week3 = np.array((reach[2], profit[2]))
        e_week4 = np.array((reach[3], profit[3]))

        # Monthly Efficiency
        e_month = e_week1 + e_week2 + e_week3 + e_week4
        e_month_magnitude = np.linalg.norm(e_month)
        e_monthx = e_month[0] ** 2
        e_monthy = e_month[1] ** 2
        alpha = 1
        theta = np.arctan(e_monthy / (e_monthx - alpha))
        theta = np.degrees(theta)
        print("")
        print(e_month)

        plt.figure(figsize=(7.5, 5))
        plt.title('Bebang\'s Monthly Post Efficiency')
        plt.xlim(0, 1.01 * np.sum(reach))
        plt.ylim(-np.sum(np.abs(profit)), np.sum(np.abs(profit)))
        plt.xlabel('FB Post Reach Increment')
        plt.ylabel('Profit')
        plt.grid()

        plt.quiver(0, 0, e_week1[0], e_week1[1], angles='xy', scale_units='xy', scale=1, color='red', width=0.0025,
                   label='Week 1: -{:.2f}'.format(np.linalg.norm(e_week1)))

        plt.quiver(e_week1[0], e_week1[1], e_week2[0], e_week2[1],
                   angles='xy', scale_units='xy', scale=1, color='yellowgreen', width=0.0025,
                   label='Week 2: {:.2f}'.format(np.linalg.norm(e_week2)))

        plt.quiver(np.add(e_week1[0], e_week2[0]),e_week1[1] + e_week2[1], e_week3[0], e_week3[1],
                   angles='xy', scale_units='xy', scale=1, color='yellowgreen', width=0.0025,
                   label='Week 3: {:.2f}'.format(np.linalg.norm(e_week3)))

        plt.quiver(np.add(e_week1[0] + e_week2[0], e_week3[0]), e_week1[1] + e_week2[1] + e_week3[1], e_week4[0],
                   e_week4[1], angles='xy', scale_units='xy', scale=1, color='green', width=0.0025,
                   label='Week 4: {:.2f}'.format(np.linalg.norm(e_week4)))

        # put necessary vector plotting code here

        plt.quiver(0, 0, e_month[0], e_month[1],
                   angles='xy', scale_units='xy', scale=1, color='green', width=0.005,
                   label='Efficiency: {:.2f} @ {:.2f}'.format(e_month_magnitude, theta))

        if make_figs:
            plt.savefig(f'LinAlg-Lab2-Bebang Post Eff-{int(e_month_magnitude)}@{int(theta)}.png', dpi=300)

        plt.legend(loc='upper left')
        plt.show()

    else:
        print('the profit and reach values did not meet the vector profit')  # Make a more appropriate error statement.


profit = np.array([-18000, 3000, 12000, 10000])  # You can change the values to make different scenarios
reach = np.array([1000, 100, 500, 10])  # You can change the values to make different scenarios
month_profit_trace(profit, reach, make_figs=False)  # Toggle 'make_figs' during debugging or making documentations
